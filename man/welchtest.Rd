% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eim-class.R
\name{welchtest}
\alias{welchtest}
\title{Performs a matrix-wise Welch's t-test for two eim objects}
\usage{
welchtest(
  object = NULL,
  object2 = NULL,
  X = NULL,
  W = NULL,
  X2 = NULL,
  W2 = NULL,
  nboot = 50,
  seed = NULL,
  ...
)
}
\arguments{
\item{object}{An \code{eim} object, as returned by \link{eim}.}

\item{object2}{A second \code{eim} object to compare with \code{object}.}

\item{X}{A \verb{(b x c)} matrix representing candidate votes per ballot box.}

\item{W}{A \verb{(b x g)} matrix representing group votes per ballot box.}

\item{X2}{A second \verb{(b x c)} matrix to compare with \code{X}.}

\item{W2}{A second \verb{(b x g)} matrix to compare with \code{W}.}

\item{nboot}{Integer specifying how many times to run the EM algorithm per object.}

\item{seed}{An optional integer indicating the random seed for the randomized algorithms. This argument is only applicable if \code{initial_prob = random} or method is either \code{mcmc} or \code{mvn_cdf}. Aditionally, it sets the random draws of the ballot boxes.}

\item{...}{Additional arguments passed to \link{bootstrap} and \link{run_em}.}
}
\value{
A numeric matrix of p-values with the same dimensions as the estimated probability matrices (\code{p}) from the input objects.
Each entry represents the p-value from a Welch's t-test comparing the corresponding elements of the two matrices.
}
\description{
This function compares two \code{eim} objects (or sets of matrices that can be converted to such objects) by computing a Welch's t-test on each component
of their estimated probability matrices (\code{p}). The Welch test is applied using bootstrap-derived standard deviations, and the result is a matrix
of p-values corresponding to each group-candidate combination.
}
\details{
The method is fully vectorized and uses the Welch-Satterthwaite approximation for degrees of freedom. It is useful when testing for statistically
significant differences between voting probabilities obtained from two different group structures, vote matrices, or weighting matrices.

You must provide either:
\itemize{
\item Two \code{eim} objects via \code{object} and \code{object2}, or
\item Four matrices: \code{X}, \code{W}, \code{X2}, and \code{W2}, which will be converted into \code{eim} objects internally.
}

Only one input mode is allowed at a time. The function internally computes bootstrapped standard deviations using \link{bootstrap} on both objects.
The Welch test is computed using the formula:

\deqn{
t_{ij} = \frac{p_{1,ij} - p_{2,ij}}{\sqrt{(s_{1,ij}^2 + s_{2,ij}^2) / n}},
}
where \eqn{s_{1,ij}^2} and \eqn{s_{2,ij}^2} are the bootstrap variances, and \code{n} is the number of bootstrap samples.

The degrees of freedom for each cell are computed using the Welchâ€“Satterthwaite equation.
}
\examples{
sim <- simulate_election(num_ballots = 100, num_candidates = 3, num_groups = 5, seed = 123)
sim2 <- simulate_election(num_ballots = 100, num_candidates = 3, num_groups = 5, seed = 124)
eim1 <- eim(sim$X, sim$W)
eim2 <- eim(sim2$X, sim2$W)

pvals <- welchtest(object = eim1, object2 = eim2, nboot = 100)

# Check which entries are significantly different
which(pvals < 0.05, arr.ind = TRUE)

}
