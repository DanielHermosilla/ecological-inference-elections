% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rxc-package.R
\name{rxc}
\alias{rxc}
\title{Estimate RxC Matrix with EM Algorithm}
\description{
This R6 class implements an EM algorithm for estimating an RxC matrix from an ecological inference problem. It supports multiple methods for approximating the E-step including "Multinomial", "Hit and Run", "MVN CDF", "MVN PDF", and "Exact". The class can be initialized with candidate and group matrices or by reading a JSON file, and it provides methods for precomputation, running the algorithm, and saving results.
}
\section{Class Constructor}{

\describe{
\item{\code{new(X = NULL, W = NULL, json_path = NULL)}}{
\itemize{
\item \strong{X}: A (b x c) matrix of candidate votes. Optional if \code{json_path} is provided.
\item \strong{W}: A (b x g) matrix of group votes. Optional if \code{json_path} is provided.
\item \strong{json_path}: A character string specifying the path to a JSON file containing matrices \code{X} and \code{W}.
}
}
}
}

\section{Public Methods}{

\describe{
\item{\code{precompute(method, ...)}}{
\itemize{
\item \strong{Args:}
\itemize{
\item \code{method}: A character string specifying the method to precompute. Options: "Exact" or "Hit and Run".
\item \code{...}: Additional arguments. For "Hit and Run", supply \code{step_size} (a positive integer) and \code{samples} (an integer).
}
\item \strong{Returns}: The modified \code{rxc} object (invisibly) for method chaining.
}
}

\item{\code{compute(main_method, probability_method, iterations, stopping_threshold, verbose, ...)}}{
\itemize{
\item \strong{Args:}
\itemize{
\item \code{main_method}: A character string indicating the EM method. Options: "Multinomial", "MVN CDF", "MVN PDF", "Hit and Run", "Exact".
\item \code{probability_method}: A character string for obtaining the initial probability. Options: "Group proportional", "Proportional", "Uniform".
\item \code{iterations}: An integer specifying the maximum number of iterations (default: 1000).
\item \code{stopping_threshold}: A numeric value for the stopping criterion (default: 0.001).
\item \code{verbose}: A boolean indicating whether to print messages during computation (default: FALSE).
\item \code{...}: Additional arguments required by specific methods. For example, for "Hit and Run", supply \code{step_size} and \code{samples}; for "MVN CDF", supply \code{multivariate_method}, \code{multivariate_error}, and \code{multivariate_iterations}.
}
\item \strong{Returns}: The modified \code{rxc} object (invisibly) for method chaining.
}
}

\item{\code{print()}}{
\itemize{
\item \strong{Description}: Prints the model's principal attributes, including the candidate and group matrices and, if computed, the EM results.
\item \strong{Returns}: The \code{rxc} object (invisibly) for method chaining.
}
}

\item{\code{summary()}}{
\itemize{
\item \strong{Description}: Returns a list with key attributes such as the number of candidates, groups, ballots, selected method, a preview of the probabilities, and log-likelihood values.
\item \strong{Returns}: A list with the principal attributes.
}
}

\item{\code{save_results(filename)}}{
\itemize{
\item \strong{Args:}
\itemize{
\item \code{filename}: A character string specifying the file name (with extension) to save the results. Supported extensions are ".rds", ".json", or ".csv".
}
\item \strong{Returns}: The modified \code{rxc} object (invisibly) for method chaining.
}
}
}
}

\keyword{(used}
\keyword{Boolean}
\keyword{C}
\keyword{CDF}
\keyword{CDF.}
\keyword{Carlo}
\keyword{Destructor}
\keyword{EM}
\keyword{Exact}
\keyword{Hit}
\keyword{Integer}
\keyword{MVN}
\keyword{Monte}
\keyword{Run}
\keyword{The}
\keyword{algorithm}
\keyword{allocated}
\keyword{and}
\keyword{been}
\keyword{been_called}
\keyword{been_computed}
\keyword{been_precomputed_exact}
\keyword{been_precomputed_hr}
\keyword{before}
\keyword{called}
\keyword{candidates}
\keyword{clean}
\keyword{cleanup).}
\keyword{computed.}
\keyword{determines}
\keyword{empty_candidates}
\keyword{error}
\keyword{finalize}
\keyword{for}
\keyword{has}
\keyword{hr_samples}
\keyword{hr_step_size}
\keyword{if}
\keyword{in}
\keyword{indicates}
\keyword{indices}
\keyword{integration}
\keyword{internal}
\keyword{iterations}
\keyword{memory}
\keyword{method}
\keyword{method.}
\keyword{mvn_error}
\keyword{mvn_iterations}
\keyword{mvn_method}
\keyword{no}
\keyword{number}
\keyword{object}
\keyword{of}
\keyword{performed.}
\keyword{precomputation}
\keyword{received}
\keyword{routines.}
\keyword{samples}
\keyword{simulation.}
\keyword{size}
\keyword{step}
\keyword{that}
\keyword{the}
\keyword{threshold}
\keyword{to}
\keyword{used}
\keyword{vector}
\keyword{via}
\keyword{votes.}
\keyword{with}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{X}}{A (b x c) matrix with the observed candidate votes. Provided manually or loaded from JSON.}

\item{\code{W}}{A (b x g) matrix with the observed group votes. Provided manually or loaded from JSON.}

\item{\code{method}}{A character string indicating the selected EM method. Options: "Multinomial", "Hit and Run", "MVN CDF", "MVN PDF", "Exact".}

\item{\code{probability}}{A (g x c) matrix storing the final estimated probabilities.}

\item{\code{logLikelihood}}{A numeric vector storing the log-likelihood values during the EM iterations.}

\item{\code{total_iterations}}{An integer representing the total number of iterations performed by the EM algorithm.}

\item{\code{total_time}}{A numeric value representing the total time taken by the EM algorithm.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{samples}}{Active binding showing the Hit and Run samples if the selected method is "Hit and Run".}

\item{\code{step_size}}{Active binding showing the Hit and Run step size if the selected method is "Hit and Run".}

\item{\code{multivariate_method}}{Active binding for the MVN CDF integration method if the selected method is "MVN CDF".}

\item{\code{multivariate_error}}{Active binding for the MVN CDF error threshold if the selected method is "MVN CDF".}

\item{\code{multivariate_iterations}}{Active binding for the MVN CDF number of Monte Carlo iterations if the selected method is "MVN CDF".}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-rxc-new}{\code{rxc$new()}}
\item \href{#method-rxc-precompute}{\code{rxc$precompute()}}
\item \href{#method-rxc-compute}{\code{rxc$compute()}}
\item \href{#method-rxc-print}{\code{rxc$print()}}
\item \href{#method-rxc-summary}{\code{rxc$summary()}}
\item \href{#method-rxc-save_results}{\code{rxc$save_results()}}
\item \href{#method-rxc-clone}{\code{rxc$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-new"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$new(X = NULL, W = NULL, json_path = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-precompute"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-precompute}{}}}
\subsection{Method \code{precompute()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$precompute(method, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-compute"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-compute}{}}}
\subsection{Method \code{compute()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$compute(
  main_method = "Multinomial",
  probability_method = "Group proportional",
  iterations = 1000,
  stopping_threshold = 0.001,
  verbose = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-print"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-summary"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-summary}{}}}
\subsection{Method \code{summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-save_results"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-save_results}{}}}
\subsection{Method \code{save_results()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$save_results(filename)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rxc-clone"></a>}}
\if{latex}{\out{\hypertarget{method-rxc-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rxc$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
