% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/instancer.R
\name{random_samples}
\alias{random_samples}
\title{Randomly create a voting instance by defining an interval}
\usage{
random_samples(
  ballots_range,
  candidates_range,
  demographic_range,
  voting_range
)
}
\arguments{
\item{ballots_range}{(integer) A vector of size 2 with the lower and upper bound of ballot boxes.}

\item{candidates_range}{(integer) A vector of size 2 with the lower and upper bound of candidates to draw.}

\item{demographic_range}{(integer) A vector of size 2 with the lower and upper bound of demographic groups
to draw.}

\item{voting_range}{(integer) A vector of size 2 with the lower and upper bound of votes per ballot boxes.}
}
\value{
A list with components:
\item{X}{A matrix (b x c) with candidate votes per ballot box.}
\item{W}{A matrix (b x g) with demographic votes per ballot box.}
\item{ground_truth}{A matrix (g x c) with the estimated \strong{(unseen)} probabilities that a demographic group votes for a given candidate.}
\item{ballots}{The amount of ballot boxes that were drawn.}
\item{candidates}{The amount of candidates that were drawn.}
\item{groups}{The amount of demographic groups that were drawn.}
\item{total_votes}{A vector with the amount of total votes per ballot box.}
}
\description{
Given a range of possible \strong{seen} outcomes (such as ballot boxes, amount of candidates, etc),
creates a completely random voting instance, simulating the unseen results aswell.
}
\examples{

bal_range <- c(30, 50)
can_range <- c(2, 4)
group_range <- c(2, 6)
voting_range <- c(50, 100)
results <- random_samples(bal_range, can_range, group_range, voting_range)

# X matrix
results$X # A randomly generated matrix of dimension (b x c)
ncol(results$X <= can_range[2]) # Always TRUE
ncol(results$X >= can_range[1]) # Always TRUE
nrow(results$X <= bal_range[2]) # Always TRUE
nrow(results$X >= bal_range[1]) # Always TRUE

# W matrix
results$W # A randomly generated matrix of dimension (b x g)
ncol(results$W <= group_range[2]) # Always TRUE
ncol(results$W >= group_range[1]) # Always TRUE
nrow(results$W <= bal_range[2]) # Always TRUE
nrow(results$W >= bal_range[1]) # Always TRUE

# Probability matrix
results$ground_truth # A matrix (g x c) that summarise the unseen outcomes
ncol(results$ground_truth) == ncol(results$X) # Always TRUE
nrow(results$ground_truth) == ncol(results$W) # Always TRUE

}
\seealso{
[simulate_votation()]
}
